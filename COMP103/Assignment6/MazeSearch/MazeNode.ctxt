#BlueJ class context
comment0.target=MazeNode
comment0.text=\r\n\ Implements\ a\ generic\ general\ tree\ node\ where\ the\ type\ of\ the\r\n\ \ item\ in\ each\ node\ is\ specified\ by\ the\ type\ variable\ MazeNode\r\n\ \ Used\ to\ help\ traverse\ the\ graph.\r\n\ \ The\ neighbours\ of\ a\ node\ are\ ordered.\r\n\r\n\ \ Taken\ from\ the\ previous\ assignments\ and\ edited\ to\ work\ with\ this\ one.\r\n
comment1.params=C\ parent
comment1.target=MazeNode(java.lang.Object,\ MazeNode)
comment1.text=Constructor
comment10.params=
comment10.target=java.util.Iterator\ iterator()
comment10.text=\r\n\ Enables\ foreach\:\r\n\ \ \ \ \ \ for\ (GTNode<E>\ child\ \:\ node){..do\ something\ to\ each\ child..}\r\n\ to\ loop\ through\ the\ children\ of\ a\ node\r\n
comment2.params=
comment2.target=java.lang.Object\ getCell()
comment2.text=Getter\ methods
comment3.params=
comment3.target=MazeNode\ getParent()
comment4.params=
comment4.target=int\ getNeighbour()
comment5.params=
comment5.target=int\ getRecordNeighbour()
comment6.params=
comment6.target=int\ numberOfChildren()
comment7.params=node
comment7.target=void\ addNeighbours(MazeNode)
comment8.params=neighbour
comment8.target=void\ setNeighbour(int)
comment9.params=neighbour
comment9.target=void\ removeChild(MazeNode)
comment9.text=Remove\ child\ at\ position\ i
numComments=11
