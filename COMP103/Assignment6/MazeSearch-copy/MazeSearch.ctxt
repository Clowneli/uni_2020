#BlueJ class context
comment0.target=MazeSearch
comment0.text=\r\n\ Search\ for\ a\ path\ to\ the\ goal\ in\ a\ maze.\r\n\ The\ maze\ consists\ of\ a\ graph\ of\ MazeCells\:\r\n\ Each\ cell\ has\ a\ collection\ of\ neighbouring\ cells.\r\n\ Each\ cell\ can\ be\ "visited"\ and\ it\ will\ remember\ that\ it\ has\ been\ visited\r\n\ A\ MazeCell\ is\ Iterable,\ so\ that\ you\ can\ iterate\ through\ its\ neighbour\ cells\ with\r\n\ for(MazeCell\ neighbour\ \:\ cell){....\r\n\ <p>\r\n\ The\ maze\ has\ a\ goal\ cell\ (shown\ in\ green,\ two\ thirds\ towards\ the\ bottom\ right\ corner)\r\n\ The\ maze.getGoal()\ method\ returns\ the\ goal\ cell\ of\ the\ maze.\r\n\ The\ user\ can\ click\ on\ a\ cell,\ and\ the\ program\ will\ search\ for\ a\ path\r\n\ from\ that\ cell\ to\ the\ goal.\r\n\ <p>\r\n\ Every\ cell\ that\ is\ looked\ at\ during\ the\ search\ is\ coloured\ \ yellow,\ and\ then,\r\n\ if\ the\ cell\ turns\ out\ to\ be\ on\ a\ dead\ end,\ it\ is\ coloured\ red.\r\n
comment1.params=
comment1.target=void\ setupGui()
comment1.text=\r\n\ Set\ up\ the\ interface\r\n
comment2.params=
comment2.target=void\ makeMaze()
comment2.text=\r\n\ Creates\ a\ new\ maze\ and\ draws\ it\ .\r\n
comment3.params=action\ x\ y
comment3.target=void\ doMouse(java.lang.String,\ double,\ double)
comment3.text=\r\n\ Clicking\ the\ mouse\ on\ a\ cell\ should\ make\ the\ program\r\n\ search\ for\ a\ path\ from\ the\ clicked\ cell\ to\ the\ goal.\r\n
comment4.params=args
comment4.target=void\ main(java.lang.String[])
numComments=5
