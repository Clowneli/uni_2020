#BlueJ class context
comment0.target=WellingtonTrains
comment0.text=\r\n\ WellingtonTrains\r\n\ A\ program\ to\ answer\ queries\ about\ Wellington\ train\ lines\ and\ timetables\ for\r\n\ \ the\ train\ services\ on\ those\ train\ lines.\r\n\r\n\ See\ the\ assignment\ page\ for\ a\ description\ of\ the\ program\ and\ what\ you\ have\ to\ do.\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ main\ method\:\ \ load\ the\ data\ and\ set\ up\ the\ user\ interface\r\n
comment10.params=stationName
comment10.target=void\ listLinesOfStation(java.lang.String)
comment10.text=\r\n\ list\ lines\ of\ station\ method\r\n
comment11.params=lineName
comment11.target=void\ listStationsOnLine(java.lang.String)
comment11.text=\ \r\n\ list\ staions\ on\ line\ method\r\n
comment12.params=name\ dest
comment12.target=void\ checkConnected(java.lang.String,\ java.lang.String)
comment12.text=\r\n\ What\ line\ gets\ to\ the\ destination\ method\r\n
comment2.params=
comment2.target=void\ loadData()
comment2.text=\r\n\ Load\ data\ files\r\n
comment3.params=
comment3.target=void\ setupGUI()
comment3.text=\r\n\ User\ interface\ has\ buttons\ for\ the\ queries\ and\ text\ fields\ to\ enter\ stations\ and\ train\ line\r\n\ You\ will\ need\ to\ implement\ the\ methods\ here.\r\n
comment4.params=action\ x\ y
comment4.target=void\ doMouse(java.lang.String,\ double,\ double)
comment5.params=
comment5.target=void\ loadStationData()
comment5.text=\r\n\ loads\ the\ stations\r\n
comment6.params=
comment6.target=void\ loadTrainLineData()
comment6.text=\r\n\ loads\ the\ train\ line\ data\r\n\ allocates\ the\ trains\ to\ a\ line\r\n
comment7.params=
comment7.target=void\ listAllStations()
comment7.text=\r\n\ loads\ the\ service\ data.\r\n\r\n\ \ \ \ void\ loadTrainServicesData(){\r\n\ \ \ \ \ \ \ \ //loop\ for\ adding\ each\ station\ to\ each\ line\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(TrainLine\ line\:\ linesList){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try{\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Scanner\ sc\ \=\ new\ Scanner(Path.of("data/"+line.getName()+"-stations.data"));\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ List<String>\ len\ \=\ Files.readAllLines(Path.of("data/"+line.getName()+"-service.data"));\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\=0;i<len.size();i++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ while(sc.hasNextInt()){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\ catch(IOException\ e){UI.println("File\ reading\ failed");}\ \ \ \r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ /**\r\n\ list\ all\ staions\ method\r\n
comment8.params=
comment8.target=void\ listStationsByName()
comment8.text=\r\n\ list\ all\ staions\ alphabetically\ method\r\n
comment9.params=
comment9.target=void\ listAllTrainLines()
comment9.text=\r\n\ list\ all\ lines\ method\r\n
numComments=13
